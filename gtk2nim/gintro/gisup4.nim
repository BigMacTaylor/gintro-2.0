const
  SCA = [
    "direction_changed!gtk4.Widget!1!(self: gtk4.Widget; previousDirection: gtk4.TextDirection)!(self: ptr gtk4.Widget00; previousDirection: gtk4.TextDirection)",
    "keynav_failed!gtk4.Widget!1!(self: gtk4.Widget; direction: gtk4.DirectionType): bool!(self: ptr gtk4.Widget00; direction: gtk4.DirectionType): gboolean",
    "mnemonic_activate!gtk4.Widget!1!(self: gtk4.Widget; groupCycling: bool): bool!(self: ptr gtk4.Widget00; groupCycling: gboolean): gboolean",
    "move_focus!gtk4.Widget!1!(self: gtk4.Widget; direction: gtk4.DirectionType)!(self: ptr gtk4.Widget00; direction: gtk4.DirectionType)",
    "query_tooltip!gtk4.Widget!4!(self: gtk4.Widget; x: int; y: int; keyboardMode: bool; tooltip: gtk4.Tooltip): bool!(self: ptr gtk4.Widget00; x: int32; y: int32; keyboardMode: gboolean; tooltip: ptr gtk4.Tooltip00): gboolean",
    "state_flags_changed!gtk4.Widget!1!(self: gtk4.Widget; flags: gtk4.StateFlags)!(self: ptr gtk4.Widget00; flags: gtk4.StateFlags)",
    "child_activated!gtk4.FlowBox!1!(self: gtk4.FlowBox; child: gtk4.FlowBoxChild)!(self: ptr gtk4.FlowBox00; child: ptr gtk4.FlowBoxChild00)",
    "move_cursor!gtk4.FlowBox!4!(self: gtk4.FlowBox; step: gtk4.MovementStep; count: int; extend: bool; modify: bool): bool!(self: ptr gtk4.FlowBox00; step: gtk4.MovementStep; count: int32; extend: gboolean; modify: gboolean): gboolean",
    "emoji_picked!gtk4.EmojiChooser!1!(self: gtk4.EmojiChooser; text: cstring)!(self: ptr gtk4.EmojiChooser00; text: cstring)",
    "close_request!gtk4.Window!0!(self: gtk4.Window): bool!(self: ptr gtk4.Window00): gboolean",
    "enable_debugging!gtk4.Window!1!(self: gtk4.Window; toggle: bool): bool!(self: ptr gtk4.Window00; toggle: gboolean): gboolean",
    "response!gtk4.Dialog!1!(self: gtk4.Dialog; responseId: int)!(self: ptr gtk4.Dialog00; responseId: int32)",
    "adjust_bounds!gtk4.Range!1!(self: gtk4.Range; value: cdouble)!(self: ptr gtk4.Range00; value: cdouble)",
    "change_value!gtk4.Range!2!(self: gtk4.Range; scroll: gtk4.ScrollType; value: cdouble): bool!(self: ptr gtk4.Range00; scroll: gtk4.ScrollType; value: cdouble): gboolean",
    "move_slider!gtk4.Range!1!(self: gtk4.Range; step: gtk4.ScrollType)!(self: ptr gtk4.Range00; step: gtk4.ScrollType)",
    "create_context!gtk4.GLArea!0!(self: gtk4.GLArea): gdk4.GLContext!(self: ptr gtk4.GLArea00): ptr gdk4.GLContext00",
    "render!gtk4.GLArea!1!(self: gtk4.GLArea; context: gdk4.GLContext): bool!(self: ptr gtk4.GLArea00; context: ptr gdk4.GLContext00): gboolean",
    "resize!gtk4.GLArea!2!(self: gtk4.GLArea; width: int; height: int)!(self: ptr gtk4.GLArea00; width: int32; height: int32)",
    "window_added!gtk4.Application!1!(self: gtk4.Application; window: gtk4.Window)!(self: ptr gtk4.Application00; window: ptr gtk4.Window00)",
    "window_removed!gtk4.Application!1!(self: gtk4.Application; window: gtk4.Window)!(self: ptr gtk4.Application00; window: ptr gtk4.Window00)",
    "change_current_page!gtk4.ShortcutsSection!1!(self: gtk4.ShortcutsSection; obj: int): bool!(self: ptr gtk4.ShortcutsSection00; obj: int32): gboolean",
    "activate_link!gtk4.LinkButton!0!(self: gtk4.LinkButton): bool!(self: ptr gtk4.LinkButton00): gboolean",
    "format_entry_text!gtk4.ComboBox!1!(self: gtk4.ComboBox; path: cstring): string!(self: ptr gtk4.ComboBox00; path: cstring): cstring",
    "move_active!gtk4.ComboBox!1!(self: gtk4.ComboBox; scrollType: gtk4.ScrollType)!(self: ptr gtk4.ComboBox00; scrollType: gtk4.ScrollType)",
    "popdown!gtk4.ComboBox!0!(self: gtk4.ComboBox): bool!(self: ptr gtk4.ComboBox00): gboolean",
    "activate_link!gtk4.AboutDialog!1!(self: gtk4.AboutDialog; uri: cstring): bool!(self: ptr gtk4.AboutDialog00; uri: cstring): gboolean",
    "move_cursor!gtk4.ListBox!4!(self: gtk4.ListBox; obj: gtk4.MovementStep; p0: int; p1: bool; p2: bool)!(self: ptr gtk4.ListBox00; obj: gtk4.MovementStep; p0: int32; p1: gboolean; p2: gboolean)",
    "row_activated!gtk4.ListBox!1!(self: gtk4.ListBox; row: gtk4.ListBoxRow)!(self: ptr gtk4.ListBox00; row: ptr gtk4.ListBoxRow00)",
    "row_selected!gtk4.ListBox!1!(self: gtk4.ListBox; row: gtk4.ListBoxRow = nil)!(self: ptr gtk4.ListBox00; row: ptr gtk4.ListBoxRow00)",
    "row_changed!gtk4.TreeModel!2!(self: gtk4.TreeModel; path: gtk4.TreePath; iter: gtk4.TreeIter)!(self: ptr gtk4.TreeModel00; path: ptr gtk4.TreePath00; iter: gtk4.TreeIter)",
    "row_deleted!gtk4.TreeModel!1!(self: gtk4.TreeModel; path: gtk4.TreePath)!(self: ptr gtk4.TreeModel00; path: ptr gtk4.TreePath00)",
    "row_has_child_toggled!gtk4.TreeModel!2!(self: gtk4.TreeModel; path: gtk4.TreePath; iter: gtk4.TreeIter)!(self: ptr gtk4.TreeModel00; path: ptr gtk4.TreePath00; iter: gtk4.TreeIter)",
    "row_inserted!gtk4.TreeModel!2!(self: gtk4.TreeModel; path: gtk4.TreePath; iter: gtk4.TreeIter)!(self: ptr gtk4.TreeModel00; path: ptr gtk4.TreePath00; iter: gtk4.TreeIter)",
    "selection_changed!gtk4.SelectionModel!2!(self: gtk4.SelectionModel; position: int; nItems: int)!(self: ptr gtk4.SelectionModel00; position: uint32; nItems: uint32)",
    "edge_overshot!gtk4.ScrolledWindow!1!(self: gtk4.ScrolledWindow; pos: gtk4.PositionType)!(self: ptr gtk4.ScrolledWindow00; pos: gtk4.PositionType)",
    "edge_reached!gtk4.ScrolledWindow!1!(self: gtk4.ScrolledWindow; pos: gtk4.PositionType)!(self: ptr gtk4.ScrolledWindow00; pos: gtk4.PositionType)",
    "move_focus_out!gtk4.ScrolledWindow!1!(self: gtk4.ScrolledWindow; directionType: gtk4.DirectionType)!(self: ptr gtk4.ScrolledWindow00; directionType: gtk4.DirectionType)",
    "scroll_child!gtk4.ScrolledWindow!2!(self: gtk4.ScrolledWindow; scroll: gtk4.ScrollType; horizontal: bool): bool!(self: ptr gtk4.ScrolledWindow00; scroll: gtk4.ScrollType; horizontal: gboolean): gboolean",
    "get_child_position!gtk4.Overlay!2!(self: gtk4.Overlay; widget: gtk4.Widget; allocation: var gdk4.Rectangle): bool!(self: ptr gtk4.Overlay00; widget: ptr gtk4.Widget00; allocation: var gdk4.Rectangle): gboolean",
    "delete_from_cursor!gtk4.TextView!2!(self: gtk4.TextView; `type`: gtk4.DeleteType; count: int)!(self: ptr gtk4.TextView00; `type`: gtk4.DeleteType; count: int32)",
    "extend_selection!gtk4.TextView!4!(self: gtk4.TextView; granularity: gtk4.TextExtendSelection; location: gtk4.TextIter; start: gtk4.TextIter; `end`: gtk4.TextIter): bool!(self: ptr gtk4.TextView00; granularity: gtk4.TextExtendSelection; location: gtk4.TextIter; start: gtk4.TextIter; `end`: gtk4.TextIter): gboolean",
    "insert_at_cursor!gtk4.TextView!1!(self: gtk4.TextView; string: cstring)!(self: ptr gtk4.TextView00; string: cstring)",
    "move_cursor!gtk4.TextView!3!(self: gtk4.TextView; step: gtk4.MovementStep; count: int; extendSelection: bool)!(self: ptr gtk4.TextView00; step: gtk4.MovementStep; count: int32; extendSelection: gboolean)",
    "move_viewport!gtk4.TextView!2!(self: gtk4.TextView; step: gtk4.ScrollStep; count: int)!(self: ptr gtk4.TextView00; step: gtk4.ScrollStep; count: int32)",
    "preedit_changed!gtk4.TextView!1!(self: gtk4.TextView; preedit: cstring)!(self: ptr gtk4.TextView00; preedit: cstring)",
    "select_all!gtk4.TextView!1!(self: gtk4.TextView; select: bool)!(self: ptr gtk4.TextView00; select: gboolean)",
    "location_popup!gtk4.FileChooserWidget!1!(self: gtk4.FileChooserWidget; path: cstring)!(self: ptr gtk4.FileChooserWidget00; path: cstring)",
    "quick_bookmark!gtk4.FileChooserWidget!1!(self: gtk4.FileChooserWidget; bookmarkIndex: int)!(self: ptr gtk4.FileChooserWidget00; bookmarkIndex: int32)",
    "value_changed!gtk4.ScaleButton!1!(self: gtk4.ScaleButton; value: cdouble)!(self: ptr gtk4.ScaleButton00; value: cdouble)",
    "resize!gtk4.DrawingArea!2!(self: gtk4.DrawingArea; width: int; height: int)!(self: ptr gtk4.DrawingArea00; width: int32; height: int32)",
    "prepare!gtk4.Assistant!1!(self: gtk4.Assistant; page: gtk4.Widget)!(self: ptr gtk4.Assistant00; page: ptr gtk4.Widget00)",
    "custom_item_activated!gtk4.AppChooserButton!1!(self: gtk4.AppChooserButton; itemName: cstring)!(self: ptr gtk4.AppChooserButton00; itemName: cstring)",
    "activate!gtk4.GridView!1!(self: gtk4.GridView; position: int)!(self: ptr gtk4.GridView00; position: uint32)",
    "activate_link!gtk4.Label!1!(self: gtk4.Label; uri: cstring): bool!(self: ptr gtk4.Label00; uri: cstring): gboolean",
    "move_cursor!gtk4.Label!3!(self: gtk4.Label; step: gtk4.MovementStep; count: int; extendSelection: bool)!(self: ptr gtk4.Label00; step: gtk4.MovementStep; count: int32; extendSelection: gboolean)",
    "activate!gtk4.ColumnView!1!(self: gtk4.ColumnView; position: int)!(self: ptr gtk4.ColumnView00; position: uint32)",
    "response!gtk4.InfoBar!1!(self: gtk4.InfoBar; responseId: int)!(self: ptr gtk4.InfoBar00; responseId: int32)",
    "activate_cursor_item!gtk4.IconView!0!(self: gtk4.IconView): bool!(self: ptr gtk4.IconView00): gboolean",
    "item_activated!gtk4.IconView!1!(self: gtk4.IconView; path: gtk4.TreePath)!(self: ptr gtk4.IconView00; path: ptr gtk4.TreePath00)",
    "move_cursor!gtk4.IconView!4!(self: gtk4.IconView; step: gtk4.MovementStep; count: int; extend: bool; modify: bool): bool!(self: ptr gtk4.IconView00; step: gtk4.MovementStep; count: int32; extend: gboolean; modify: gboolean): gboolean",
    "application_activated!gtk4.AppChooserWidget!1!(self: gtk4.AppChooserWidget; application: gio.AppInfo)!(self: ptr gtk4.AppChooserWidget00; application: ptr gio.AppInfo00)",
    "application_selected!gtk4.AppChooserWidget!1!(self: gtk4.AppChooserWidget; application: gio.AppInfo)!(self: ptr gtk4.AppChooserWidget00; application: ptr gio.AppInfo00)",
    "text_popped!gtk4.Statusbar!2!(self: gtk4.Statusbar; contextId: int; text: cstring)!(self: ptr gtk4.Statusbar00; contextId: uint32; text: cstring)",
    "text_pushed!gtk4.Statusbar!2!(self: gtk4.Statusbar; contextId: int; text: cstring)!(self: ptr gtk4.Statusbar00; contextId: uint32; text: cstring)",
    "icon_press!gtk4.Entry!1!(self: gtk4.Entry; iconPos: gtk4.EntryIconPosition)!(self: ptr gtk4.Entry00; iconPos: gtk4.EntryIconPosition)",
    "icon_release!gtk4.Entry!1!(self: gtk4.Entry; iconPos: gtk4.EntryIconPosition)!(self: ptr gtk4.Entry00; iconPos: gtk4.EntryIconPosition)",
    "change_current_page!gtk4.Notebook!1!(self: gtk4.Notebook; obj: int): bool!(self: ptr gtk4.Notebook00; obj: int32): gboolean",
    "create_window!gtk4.Notebook!1!(self: gtk4.Notebook; page: gtk4.Widget): Notebook!(self: ptr gtk4.Notebook00; page: ptr gtk4.Widget00): ptr Notebook00",
    "focus_tab!gtk4.Notebook!1!(self: gtk4.Notebook; obj: gtk4.NotebookTab): bool!(self: ptr gtk4.Notebook00; obj: gtk4.NotebookTab): gboolean",
    "move_focus_out!gtk4.Notebook!1!(self: gtk4.Notebook; obj: gtk4.DirectionType)!(self: ptr gtk4.Notebook00; obj: gtk4.DirectionType)",
    "page_added!gtk4.Notebook!2!(self: gtk4.Notebook; child: gtk4.Widget; pageNum: int)!(self: ptr gtk4.Notebook00; child: ptr gtk4.Widget00; pageNum: uint32)",
    "page_removed!gtk4.Notebook!2!(self: gtk4.Notebook; child: gtk4.Widget; pageNum: int)!(self: ptr gtk4.Notebook00; child: ptr gtk4.Widget00; pageNum: uint32)",
    "page_reordered!gtk4.Notebook!2!(self: gtk4.Notebook; child: gtk4.Widget; pageNum: int)!(self: ptr gtk4.Notebook00; child: ptr gtk4.Widget00; pageNum: uint32)",
    "reorder_tab!gtk4.Notebook!2!(self: gtk4.Notebook; obj: gtk4.DirectionType; p0: bool): bool!(self: ptr gtk4.Notebook00; obj: gtk4.DirectionType; p0: gboolean): gboolean",
    "select_page!gtk4.Notebook!1!(self: gtk4.Notebook; obj: bool): bool!(self: ptr gtk4.Notebook00; obj: gboolean): gboolean",
    "switch_page!gtk4.Notebook!2!(self: gtk4.Notebook; page: gtk4.Widget; pageNum: int)!(self: ptr gtk4.Notebook00; page: ptr gtk4.Widget00; pageNum: uint32)",
    "expand_collapse_cursor_row!gtk4.TreeView!3!(self: gtk4.TreeView; obj: bool; p0: bool; p1: bool): bool!(self: ptr gtk4.TreeView00; obj: gboolean; p0: gboolean; p1: gboolean): gboolean",
    "move_cursor!gtk4.TreeView!4!(self: gtk4.TreeView; step: gtk4.MovementStep; direction: int; extend: bool; modify: bool): bool!(self: ptr gtk4.TreeView00; step: gtk4.MovementStep; direction: int32; extend: gboolean; modify: gboolean): gboolean",
    "row_activated!gtk4.TreeView!2!(self: gtk4.TreeView; path: gtk4.TreePath; column: gtk4.TreeViewColumn = nil)!(self: ptr gtk4.TreeView00; path: ptr gtk4.TreePath00; column: ptr gtk4.TreeViewColumn00)",
    "row_collapsed!gtk4.TreeView!2!(self: gtk4.TreeView; iter: gtk4.TreeIter; path: gtk4.TreePath)!(self: ptr gtk4.TreeView00; iter: gtk4.TreeIter; path: ptr gtk4.TreePath00)",
    "row_expanded!gtk4.TreeView!2!(self: gtk4.TreeView; iter: gtk4.TreeIter; path: gtk4.TreePath)!(self: ptr gtk4.TreeView00; iter: gtk4.TreeIter; path: ptr gtk4.TreePath00)",
    "select_all!gtk4.TreeView!0!(self: gtk4.TreeView): bool!(self: ptr gtk4.TreeView00): gboolean",
    "select_cursor_parent!gtk4.TreeView!0!(self: gtk4.TreeView): bool!(self: ptr gtk4.TreeView00): gboolean",
    "select_cursor_row!gtk4.TreeView!1!(self: gtk4.TreeView; obj: bool): bool!(self: ptr gtk4.TreeView00; obj: gboolean): gboolean",
    "start_interactive_search!gtk4.TreeView!0!(self: gtk4.TreeView): bool!(self: ptr gtk4.TreeView00): gboolean",
    "test_collapse_row!gtk4.TreeView!2!(self: gtk4.TreeView; iter: gtk4.TreeIter; path: gtk4.TreePath): bool!(self: ptr gtk4.TreeView00; iter: gtk4.TreeIter; path: ptr gtk4.TreePath00): gboolean",
    "test_expand_row!gtk4.TreeView!2!(self: gtk4.TreeView; iter: gtk4.TreeIter; path: gtk4.TreePath): bool!(self: ptr gtk4.TreeView00; iter: gtk4.TreeIter; path: ptr gtk4.TreePath00): gboolean",
    "toggle_cursor_row!gtk4.TreeView!0!(self: gtk4.TreeView): bool!(self: ptr gtk4.TreeView00): gboolean",
    "unselect_all!gtk4.TreeView!0!(self: gtk4.TreeView): bool!(self: ptr gtk4.TreeView00): gboolean",
    "change_value!gtk4.SpinButton!1!(self: gtk4.SpinButton; scroll: gtk4.ScrollType)!(self: ptr gtk4.SpinButton00; scroll: gtk4.ScrollType)",
    "input!gtk4.SpinButton!1!(self: gtk4.SpinButton; newValue: var cdouble): int!(self: ptr gtk4.SpinButton00; newValue: var cdouble): int32",
    "output!gtk4.SpinButton!0!(self: gtk4.SpinButton): bool!(self: ptr gtk4.SpinButton00): gboolean",
    "accept_position!gtk4.Paned!0!(self: gtk4.Paned): bool!(self: ptr gtk4.Paned00): gboolean",
    "cancel_position!gtk4.Paned!0!(self: gtk4.Paned): bool!(self: ptr gtk4.Paned00): gboolean",
    "cycle_child_focus!gtk4.Paned!1!(self: gtk4.Paned; reversed: bool): bool!(self: ptr gtk4.Paned00; reversed: gboolean): gboolean",
    "cycle_handle_focus!gtk4.Paned!1!(self: gtk4.Paned; reversed: bool): bool!(self: ptr gtk4.Paned00; reversed: gboolean): gboolean",
    "move_handle!gtk4.Paned!1!(self: gtk4.Paned; scrollType: gtk4.ScrollType): bool!(self: ptr gtk4.Paned00; scrollType: gtk4.ScrollType): gboolean",
    "toggle_handle_focus!gtk4.Paned!0!(self: gtk4.Paned): bool!(self: ptr gtk4.Paned00): gboolean",
    "offset_changed!gtk4.LevelBar!1!(self: gtk4.LevelBar; name: cstring)!(self: ptr gtk4.LevelBar00; name: cstring)",
    "delete_from_cursor!gtk4.Text!2!(self: gtk4.Text; `type`: gtk4.DeleteType; count: int)!(self: ptr gtk4.Text00; `type`: gtk4.DeleteType; count: int32)",
    "insert_at_cursor!gtk4.Text!1!(self: gtk4.Text; string: cstring)!(self: ptr gtk4.Text00; string: cstring)",
    "move_cursor!gtk4.Text!3!(self: gtk4.Text; step: gtk4.MovementStep; count: int; extend: bool)!(self: ptr gtk4.Text00; step: gtk4.MovementStep; count: int32; extend: gboolean)",
    "preedit_changed!gtk4.Text!1!(self: gtk4.Text; preedit: cstring)!(self: ptr gtk4.Text00; preedit: cstring)",
    "state_set!gtk4.Switch!1!(self: gtk4.Switch; state: bool): bool!(self: ptr gtk4.Switch00; state: gboolean): gboolean",
    "activate!gtk4.ListView!1!(self: gtk4.ListView; position: int)!(self: ptr gtk4.ListView00; position: uint32)",
    "deleted_text!gtk4.EntryBuffer!2!(self: gtk4.EntryBuffer; position: int; nChars: int)!(self: ptr gtk4.EntryBuffer00; position: uint32; nChars: uint32)",
    "inserted_text!gtk4.EntryBuffer!3!(self: gtk4.EntryBuffer; position: int; chars: cstring; nChars: int)!(self: ptr gtk4.EntryBuffer00; position: uint32; chars: cstring; nChars: uint32)",
    "cursor_on_match!gtk4.EntryCompletion!2!(self: gtk4.EntryCompletion; model: gtk4.TreeModel; iter: gtk4.TreeIter): bool!(self: ptr gtk4.EntryCompletion00; model: ptr gtk4.TreeModel00; iter: gtk4.TreeIter): gboolean",
    "insert_prefix!gtk4.EntryCompletion!1!(self: gtk4.EntryCompletion; prefix: cstring): bool!(self: ptr gtk4.EntryCompletion00; prefix: cstring): gboolean",
    "match_selected!gtk4.EntryCompletion!2!(self: gtk4.EntryCompletion; model: gtk4.TreeModel; iter: gtk4.TreeIter): bool!(self: ptr gtk4.EntryCompletion00; model: ptr gtk4.TreeModel00; iter: gtk4.TreeIter): gboolean",
    "editing_started!gtk4.CellRenderer!2!(self: gtk4.CellRenderer; editable: gtk4.CellEditable; path: cstring)!(self: ptr gtk4.CellRenderer00; editable: ptr gtk4.CellEditable00; path: cstring)",
    "changed!gtk4.Sorter!1!(self: gtk4.Sorter; change: gtk4.SorterChange)!(self: ptr gtk4.Sorter00; change: gtk4.SorterChange)",
    "changed!gtk4.Filter!1!(self: gtk4.Filter; change: gtk4.FilterChange)!(self: ptr gtk4.Filter00; change: gtk4.FilterChange)",
    "delete_text!gtk4.Editable!2!(self: gtk4.Editable; startPos: int; endPos: int)!(self: ptr gtk4.Editable00; startPos: int32; endPos: int32)",
    "insert_text!gtk4.Editable!3!(self: gtk4.Editable; text: cstring; length: int; position: var int)!(self: ptr gtk4.Editable00; text: cstring; length: int32; position: var int32)",
    "details_acquired!gtk4.Printer!1!(self: gtk4.Printer; success: bool)!(self: ptr gtk4.Printer00; success: gboolean)",
    "add_editable!gtk4.CellArea!4!(self: gtk4.CellArea; renderer: gtk4.CellRenderer; editable: gtk4.CellEditable; cellArea: gdk4.Rectangle; path: cstring)!(self: ptr gtk4.CellArea00; renderer: ptr gtk4.CellRenderer00; editable: ptr gtk4.CellEditable00; cellArea: gdk4.Rectangle; path: cstring)",
    "apply_attributes!gtk4.CellArea!4!(self: gtk4.CellArea; model: gtk4.TreeModel; iter: gtk4.TreeIter; isExpander: bool; isExpanded: bool)!(self: ptr gtk4.CellArea00; model: ptr gtk4.TreeModel00; iter: gtk4.TreeIter; isExpander: gboolean; isExpanded: gboolean)",
    "focus_changed!gtk4.CellArea!2!(self: gtk4.CellArea; renderer: gtk4.CellRenderer; path: cstring)!(self: ptr gtk4.CellArea00; renderer: ptr gtk4.CellRenderer00; path: cstring)",
    "remove_editable!gtk4.CellArea!2!(self: gtk4.CellArea; renderer: gtk4.CellRenderer; editable: gtk4.CellEditable)!(self: ptr gtk4.CellArea00; renderer: ptr gtk4.CellRenderer00; editable: ptr gtk4.CellEditable00)",
    "apply_tag!gtk4.TextBuffer!3!(self: gtk4.TextBuffer; tag: gtk4.TextTag; start: gtk4.TextIter; `end`: gtk4.TextIter)!(self: ptr gtk4.TextBuffer00; tag: ptr gtk4.TextTag00; start: gtk4.TextIter; `end`: gtk4.TextIter)",
    "delete_range!gtk4.TextBuffer!2!(self: gtk4.TextBuffer; start: gtk4.TextIter; `end`: gtk4.TextIter)!(self: ptr gtk4.TextBuffer00; start: gtk4.TextIter; `end`: gtk4.TextIter)",
    "insert_child_anchor!gtk4.TextBuffer!2!(self: gtk4.TextBuffer; location: gtk4.TextIter; anchor: gtk4.TextChildAnchor)!(self: ptr gtk4.TextBuffer00; location: gtk4.TextIter; anchor: ptr gtk4.TextChildAnchor00)",
    "insert_paintable!gtk4.TextBuffer!2!(self: gtk4.TextBuffer; location: gtk4.TextIter; paintable: gdk4.Paintable)!(self: ptr gtk4.TextBuffer00; location: gtk4.TextIter; paintable: ptr gdk4.Paintable00)",
    "insert_text!gtk4.TextBuffer!3!(self: gtk4.TextBuffer; location: gtk4.TextIter; text: cstring; len: int)!(self: ptr gtk4.TextBuffer00; location: gtk4.TextIter; text: cstring; len: int32)",
    "mark_deleted!gtk4.TextBuffer!1!(self: gtk4.TextBuffer; mark: gtk4.TextMark)!(self: ptr gtk4.TextBuffer00; mark: ptr gtk4.TextMark00)",
    "mark_set!gtk4.TextBuffer!2!(self: gtk4.TextBuffer; location: gtk4.TextIter; mark: gtk4.TextMark)!(self: ptr gtk4.TextBuffer00; location: gtk4.TextIter; mark: ptr gtk4.TextMark00)",
    "paste_done!gtk4.TextBuffer!1!(self: gtk4.TextBuffer; clipboard: gdk4.Clipboard)!(self: ptr gtk4.TextBuffer00; clipboard: ptr gdk4.Clipboard00)",
    "remove_tag!gtk4.TextBuffer!3!(self: gtk4.TextBuffer; tag: gtk4.TextTag; start: gtk4.TextIter; `end`: gtk4.TextIter)!(self: ptr gtk4.TextBuffer00; tag: ptr gtk4.TextTag00; start: gtk4.TextIter; `end`: gtk4.TextIter)",
    "tag_added!gtk4.TextTagTable!1!(self: gtk4.TextTagTable; tag: gtk4.TextTag)!(self: ptr gtk4.TextTagTable00; tag: ptr gtk4.TextTag00)",
    "tag_changed!gtk4.TextTagTable!2!(self: gtk4.TextTagTable; tag: gtk4.TextTag; sizeChanged: bool)!(self: ptr gtk4.TextTagTable00; tag: ptr gtk4.TextTag00; sizeChanged: gboolean)",
    "tag_removed!gtk4.TextTagTable!1!(self: gtk4.TextTagTable; tag: gtk4.TextTag)!(self: ptr gtk4.TextTagTable00; tag: ptr gtk4.TextTag00)",
    "parsing_error!gtk4.CssProvider!2!(self: gtk4.CssProvider; section: gtk4.CssSection; error: ptr glib.Error)!(self: ptr gtk4.CssProvider00; section: ptr gtk4.CssSection00; error: ptr glib.Error)",
    "edited!gtk4.CellRendererText!2!(self: gtk4.CellRendererText; path: cstring; newText: cstring)!(self: ptr gtk4.CellRendererText00; path: cstring; newText: cstring)",
    "accel_cleared!gtk4.CellRendererAccel!1!(self: gtk4.CellRendererAccel; pathString: cstring)!(self: ptr gtk4.CellRendererAccel00; pathString: cstring)",
    "accel_edited!gtk4.CellRendererAccel!4!(self: gtk4.CellRendererAccel; pathString: cstring; accelKey: int; accelMods: gdk4.ModifierType; hardwareKeycode: int)!(self: ptr gtk4.CellRendererAccel00; pathString: cstring; accelKey: uint32; accelMods: gdk4.ModifierType; hardwareKeycode: uint32)",
    "changed!gtk4.CellRendererCombo!2!(self: gtk4.CellRendererCombo; pathString: cstring; newIter: gtk4.TreeIter)!(self: ptr gtk4.CellRendererCombo00; pathString: cstring; newIter: gtk4.TreeIter)",
    "toggled!gtk4.CellRendererToggle!1!(self: gtk4.CellRendererToggle; path: cstring)!(self: ptr gtk4.CellRendererToggle00; path: cstring)",
    "color_activated!gtk4.ColorChooser!1!(self: gtk4.ColorChooser; color: gdk4.RGBA)!(self: ptr gtk4.ColorChooser00; color: gdk4.RGBA)",
    "begin!gtk4.Gesture!1!(self: gtk4.Gesture; sequence: gdk4.EventSequence = nil)!(self: ptr gtk4.Gesture00; sequence: ptr gdk4.EventSequence00)",
    "cancel!gtk4.Gesture!1!(self: gtk4.Gesture; sequence: gdk4.EventSequence = nil)!(self: ptr gtk4.Gesture00; sequence: ptr gdk4.EventSequence00)",
    "end!gtk4.Gesture!1!(self: gtk4.Gesture; sequence: gdk4.EventSequence = nil)!(self: ptr gtk4.Gesture00; sequence: ptr gdk4.EventSequence00)",
    "sequence_state_changed!gtk4.Gesture!2!(self: gtk4.Gesture; sequence: gdk4.EventSequence = nil; state: gtk4.EventSequenceState)!(self: ptr gtk4.Gesture00; sequence: ptr gdk4.EventSequence00; state: gtk4.EventSequenceState)",
    "update!gtk4.Gesture!1!(self: gtk4.Gesture; sequence: gdk4.EventSequence = nil)!(self: ptr gtk4.Gesture00; sequence: ptr gdk4.EventSequence00)",
    "drag_begin!gtk4.DragSource!1!(self: gtk4.DragSource; drag: gdk4.Drag)!(self: ptr gtk4.DragSource00; drag: ptr gdk4.Drag00)",
    "drag_cancel!gtk4.DragSource!2!(self: gtk4.DragSource; drag: gdk4.Drag; reason: gdk4.DragCancelReason): bool!(self: ptr gtk4.DragSource00; drag: ptr gdk4.Drag00; reason: gdk4.DragCancelReason): gboolean",
    "drag_end!gtk4.DragSource!2!(self: gtk4.DragSource; drag: gdk4.Drag; deleteData: bool)!(self: ptr gtk4.DragSource00; drag: ptr gdk4.Drag00; deleteData: gboolean)",
    "prepare!gtk4.DragSource!2!(self: gtk4.DragSource; x: cdouble; y: cdouble): gdk4.ContentProvider!(self: ptr gtk4.DragSource00; x: cdouble; y: cdouble): ptr gdk4.ContentProvider00",
    "enter!gtk4.DropControllerMotion!2!(self: gtk4.DropControllerMotion; x: cdouble; y: cdouble)!(self: ptr gtk4.DropControllerMotion00; x: cdouble; y: cdouble)",
    "motion!gtk4.DropControllerMotion!2!(self: gtk4.DropControllerMotion; x: cdouble; y: cdouble)!(self: ptr gtk4.DropControllerMotion00; x: cdouble; y: cdouble)",
    "accept!gtk4.DropTarget!1!(self: gtk4.DropTarget; drop: gdk4.Drop): bool!(self: ptr gtk4.DropTarget00; drop: ptr gdk4.Drop00): gboolean",
    "drop!gtk4.DropTarget!3!(self: gtk4.DropTarget; value: gobject.Value; x: cdouble; y: cdouble): bool!(self: ptr gtk4.DropTarget00; value: gobject.Value; x: cdouble; y: cdouble): gboolean",
    "enter!gtk4.DropTarget!2!(self: gtk4.DropTarget; x: cdouble; y: cdouble): gdk4.DragAction!(self: ptr gtk4.DropTarget00; x: cdouble; y: cdouble): gdk4.DragAction",
    "motion!gtk4.DropTarget!2!(self: gtk4.DropTarget; x: cdouble; y: cdouble): gdk4.DragAction!(self: ptr gtk4.DropTarget00; x: cdouble; y: cdouble): gdk4.DragAction",
    "accept!gtk4.DropTargetAsync!1!(self: gtk4.DropTargetAsync; drop: gdk4.Drop): bool!(self: ptr gtk4.DropTargetAsync00; drop: ptr gdk4.Drop00): gboolean",
    "drag_enter!gtk4.DropTargetAsync!3!(self: gtk4.DropTargetAsync; drop: gdk4.Drop; x: cdouble; y: cdouble): gdk4.DragAction!(self: ptr gtk4.DropTargetAsync00; drop: ptr gdk4.Drop00; x: cdouble; y: cdouble): gdk4.DragAction",
    "drag_leave!gtk4.DropTargetAsync!1!(self: gtk4.DropTargetAsync; drop: gdk4.Drop)!(self: ptr gtk4.DropTargetAsync00; drop: ptr gdk4.Drop00)",
    "drag_motion!gtk4.DropTargetAsync!3!(self: gtk4.DropTargetAsync; drop: gdk4.Drop; x: cdouble; y: cdouble): gdk4.DragAction!(self: ptr gtk4.DropTargetAsync00; drop: ptr gdk4.Drop00; x: cdouble; y: cdouble): gdk4.DragAction",
    "drop!gtk4.DropTargetAsync!3!(self: gtk4.DropTargetAsync; drop: gdk4.Drop; x: cdouble; y: cdouble): bool!(self: ptr gtk4.DropTargetAsync00; drop: ptr gdk4.Drop00; x: cdouble; y: cdouble): gboolean",
    "key_pressed!gtk4.EventControllerKey!3!(self: gtk4.EventControllerKey; keyval: int; keycode: int; state: gdk4.ModifierType): bool!(self: ptr gtk4.EventControllerKey00; keyval: uint32; keycode: uint32; state: gdk4.ModifierType): gboolean",
    "key_released!gtk4.EventControllerKey!3!(self: gtk4.EventControllerKey; keyval: int; keycode: int; state: gdk4.ModifierType)!(self: ptr gtk4.EventControllerKey00; keyval: uint32; keycode: uint32; state: gdk4.ModifierType)",
    "modifiers!gtk4.EventControllerKey!1!(self: gtk4.EventControllerKey; state: gdk4.ModifierType): bool!(self: ptr gtk4.EventControllerKey00; state: gdk4.ModifierType): gboolean",
    "commit!gtk4.IMContext!1!(self: gtk4.IMContext; str: cstring)!(self: ptr gtk4.IMContext00; str: cstring)",
    "delete_surrounding!gtk4.IMContext!2!(self: gtk4.IMContext; offset: int; nChars: int): bool!(self: ptr gtk4.IMContext00; offset: int32; nChars: int32): gboolean",
    "retrieve_surrounding!gtk4.IMContext!0!(self: gtk4.IMContext): bool!(self: ptr gtk4.IMContext00): gboolean",
    "event!gtk4.EventControllerLegacy!1!(self: gtk4.EventControllerLegacy; event: gdk4.Event): bool!(self: ptr gtk4.EventControllerLegacy00; event: ptr gdk4.Event00): gboolean",
    "enter!gtk4.EventControllerMotion!2!(self: gtk4.EventControllerMotion; x: cdouble; y: cdouble)!(self: ptr gtk4.EventControllerMotion00; x: cdouble; y: cdouble)",
    "motion!gtk4.EventControllerMotion!2!(self: gtk4.EventControllerMotion; x: cdouble; y: cdouble)!(self: ptr gtk4.EventControllerMotion00; x: cdouble; y: cdouble)",
    "decelerate!gtk4.EventControllerScroll!2!(self: gtk4.EventControllerScroll; velX: cdouble; velY: cdouble)!(self: ptr gtk4.EventControllerScroll00; velX: cdouble; velY: cdouble)",
    "scroll!gtk4.EventControllerScroll!2!(self: gtk4.EventControllerScroll; dx: cdouble; dy: cdouble): bool!(self: ptr gtk4.EventControllerScroll00; dx: cdouble; dy: cdouble): gboolean",
    "response!gtk4.NativeDialog!1!(self: gtk4.NativeDialog; responseId: int)!(self: ptr gtk4.NativeDialog00; responseId: int32)",
    "font_activated!gtk4.FontChooser!1!(self: gtk4.FontChooser; fontname: cstring)!(self: ptr gtk4.FontChooser00; fontname: cstring)",
    "pressed!gtk4.GestureClick!3!(self: gtk4.GestureClick; nPress: int; x: cdouble; y: cdouble)!(self: ptr gtk4.GestureClick00; nPress: int32; x: cdouble; y: cdouble)",
    "released!gtk4.GestureClick!3!(self: gtk4.GestureClick; nPress: int; x: cdouble; y: cdouble)!(self: ptr gtk4.GestureClick00; nPress: int32; x: cdouble; y: cdouble)",
    "unpaired_release!gtk4.GestureClick!4!(self: gtk4.GestureClick; x: cdouble; y: cdouble; button: int; sequence: gdk4.EventSequence = nil)!(self: ptr gtk4.GestureClick00; x: cdouble; y: cdouble; button: uint32; sequence: ptr gdk4.EventSequence00)",
    "drag_begin!gtk4.GestureDrag!2!(self: gtk4.GestureDrag; startX: cdouble; startY: cdouble)!(self: ptr gtk4.GestureDrag00; startX: cdouble; startY: cdouble)",
    "drag_end!gtk4.GestureDrag!2!(self: gtk4.GestureDrag; offsetX: cdouble; offsetY: cdouble)!(self: ptr gtk4.GestureDrag00; offsetX: cdouble; offsetY: cdouble)",
    "drag_update!gtk4.GestureDrag!2!(self: gtk4.GestureDrag; offsetX: cdouble; offsetY: cdouble)!(self: ptr gtk4.GestureDrag00; offsetX: cdouble; offsetY: cdouble)",
    "pressed!gtk4.GestureLongPress!2!(self: gtk4.GestureLongPress; x: cdouble; y: cdouble)!(self: ptr gtk4.GestureLongPress00; x: cdouble; y: cdouble)",
    "pan!gtk4.GesturePan!2!(self: gtk4.GesturePan; direction: gtk4.PanDirection; offset: cdouble)!(self: ptr gtk4.GesturePan00; direction: gtk4.PanDirection; offset: cdouble)",
    "angle_changed!gtk4.GestureRotate!2!(self: gtk4.GestureRotate; angle: cdouble; angleDelta: cdouble)!(self: ptr gtk4.GestureRotate00; angle: cdouble; angleDelta: cdouble)",
    "down!gtk4.GestureStylus!2!(self: gtk4.GestureStylus; x: cdouble; y: cdouble)!(self: ptr gtk4.GestureStylus00; x: cdouble; y: cdouble)",
    "motion!gtk4.GestureStylus!2!(self: gtk4.GestureStylus; x: cdouble; y: cdouble)!(self: ptr gtk4.GestureStylus00; x: cdouble; y: cdouble)",
    "proximity!gtk4.GestureStylus!2!(self: gtk4.GestureStylus; x: cdouble; y: cdouble)!(self: ptr gtk4.GestureStylus00; x: cdouble; y: cdouble)",
    "up!gtk4.GestureStylus!2!(self: gtk4.GestureStylus; x: cdouble; y: cdouble)!(self: ptr gtk4.GestureStylus00; x: cdouble; y: cdouble)",
    "swipe!gtk4.GestureSwipe!2!(self: gtk4.GestureSwipe; velocityX: cdouble; velocityY: cdouble)!(self: ptr gtk4.GestureSwipe00; velocityX: cdouble; velocityY: cdouble)",
    "scale_changed!gtk4.GestureZoom!1!(self: gtk4.GestureZoom; scale: cdouble)!(self: ptr gtk4.GestureZoom00; scale: cdouble)",
    "got_page_size!gtk4.PrintOperationPreview!2!(self: gtk4.PrintOperationPreview; context: gtk4.PrintContext; pageSetup: gtk4.PageSetup)!(self: ptr gtk4.PrintOperationPreview00; context: ptr gtk4.PrintContext00; pageSetup: ptr gtk4.PageSetup00)",
    "ready!gtk4.PrintOperationPreview!1!(self: gtk4.PrintOperationPreview; context: gtk4.PrintContext)!(self: ptr gtk4.PrintOperationPreview00; context: ptr gtk4.PrintContext00)",
    "begin_print!gtk4.PrintOperation!1!(self: gtk4.PrintOperation; context: gtk4.PrintContext)!(self: ptr gtk4.PrintOperation00; context: ptr gtk4.PrintContext00)",
    "create_custom_widget!gtk4.PrintOperation!0!(self: gtk4.PrintOperation): gobject.Object!(self: ptr gtk4.PrintOperation00): ptr gobject.Object00",
    "custom_widget_apply!gtk4.PrintOperation!1!(self: gtk4.PrintOperation; widget: gtk4.Widget)!(self: ptr gtk4.PrintOperation00; widget: ptr gtk4.Widget00)",
    "done!gtk4.PrintOperation!1!(self: gtk4.PrintOperation; resu: gtk4.PrintOperationResult)!(self: ptr gtk4.PrintOperation00; resu: gtk4.PrintOperationResult)",
    "draw_page!gtk4.PrintOperation!2!(self: gtk4.PrintOperation; context: gtk4.PrintContext; pageNr: int)!(self: ptr gtk4.PrintOperation00; context: ptr gtk4.PrintContext00; pageNr: int32)",
    "end_print!gtk4.PrintOperation!1!(self: gtk4.PrintOperation; context: gtk4.PrintContext)!(self: ptr gtk4.PrintOperation00; context: ptr gtk4.PrintContext00)",
    "paginate!gtk4.PrintOperation!1!(self: gtk4.PrintOperation; context: gtk4.PrintContext): bool!(self: ptr gtk4.PrintOperation00; context: ptr gtk4.PrintContext00): gboolean",
    "preview!gtk4.PrintOperation!3!(self: gtk4.PrintOperation; preview: gtk4.PrintOperationPreview; context: gtk4.PrintContext; parent: gtk4.Window = nil): bool!(self: ptr gtk4.PrintOperation00; preview: ptr gtk4.PrintOperationPreview00; context: ptr gtk4.PrintContext00; parent: ptr gtk4.Window00): gboolean",
    "request_page_setup!gtk4.PrintOperation!3!(self: gtk4.PrintOperation; context: gtk4.PrintContext; pageNr: int; setup: gtk4.PageSetup)!(self: ptr gtk4.PrintOperation00; context: ptr gtk4.PrintContext00; pageNr: int32; setup: ptr gtk4.PageSetup00)",
    "update_custom_widget!gtk4.PrintOperation!3!(self: gtk4.PrintOperation; widget: gtk4.Widget; setup: gtk4.PageSetup; settings: gtk4.PrintSettings)!(self: ptr gtk4.PrintOperation00; widget: ptr gtk4.Widget00; setup: ptr gtk4.PageSetup00; settings: ptr gtk4.PrintSettings00)",
    "sections_changed!gtk4.SectionModel!2!(self: gtk4.SectionModel; position: int; nItems: int)!(self: ptr gtk4.SectionModel00; position: uint32; nItems: uint32)",
    "bind!gtk4.SignalListItemFactory!1!(self: gtk4.SignalListItemFactory; obj: gobject.Object)!(self: ptr gtk4.SignalListItemFactory00; obj: ptr gobject.Object00)",
    "setup!gtk4.SignalListItemFactory!1!(self: gtk4.SignalListItemFactory; obj: gobject.Object)!(self: ptr gtk4.SignalListItemFactory00; obj: ptr gobject.Object00)",
    "teardown!gtk4.SignalListItemFactory!1!(self: gtk4.SignalListItemFactory; obj: gobject.Object)!(self: ptr gtk4.SignalListItemFactory00; obj: ptr gobject.Object00)",
    "unbind!gtk4.SignalListItemFactory!1!(self: gtk4.SignalListItemFactory; obj: gobject.Object)!(self: ptr gtk4.SignalListItemFactory00; obj: ptr gobject.Object00)",
    "tool_changed!gdk4.Device!1!(self: gdk4.Device; tool: gdk4.DeviceTool)!(self: ptr gdk4.Device00; tool: ptr gdk4.DeviceTool00)",
    "device_added!gdk4.Seat!1!(self: gdk4.Seat; device: gdk4.Device)!(self: ptr gdk4.Seat00; device: ptr gdk4.Device00)",
    "device_removed!gdk4.Seat!1!(self: gdk4.Seat; device: gdk4.Device)!(self: ptr gdk4.Seat00; device: ptr gdk4.Device00)",
    "tool_added!gdk4.Seat!1!(self: gdk4.Seat; tool: gdk4.DeviceTool)!(self: ptr gdk4.Seat00; tool: ptr gdk4.DeviceTool00)",
    "tool_removed!gdk4.Seat!1!(self: gdk4.Seat; tool: gdk4.DeviceTool)!(self: ptr gdk4.Seat00; tool: ptr gdk4.DeviceTool00)",
    "closed!gdk4.Display!1!(self: gdk4.Display; isError: bool)!(self: ptr gdk4.Display00; isError: gboolean)",
    "seat_added!gdk4.Display!1!(self: gdk4.Display; seat: gdk4.Seat)!(self: ptr gdk4.Display00; seat: ptr gdk4.Seat00)",
    "seat_removed!gdk4.Display!1!(self: gdk4.Display; seat: gdk4.Seat)!(self: ptr gdk4.Display00; seat: ptr gdk4.Seat00)",
    "setting_changed!gdk4.Display!1!(self: gdk4.Display; setting: cstring)!(self: ptr gdk4.Display00; setting: cstring)",
    "enter_monitor!gdk4.Surface!1!(self: gdk4.Surface; monitor: gdk4.Monitor)!(self: ptr gdk4.Surface00; monitor: ptr gdk4.Monitor00)",
    "event!gdk4.Surface!1!(self: gdk4.Surface; event: gdk4.Event): bool!(self: ptr gdk4.Surface00; event: ptr ptr gdk4.Event00): gboolean",
    "layout!gdk4.Surface!2!(self: gdk4.Surface; width: int; height: int)!(self: ptr gdk4.Surface00; width: int32; height: int32)",
    "leave_monitor!gdk4.Surface!1!(self: gdk4.Surface; monitor: gdk4.Monitor)!(self: ptr gdk4.Surface00; monitor: ptr gdk4.Monitor00)",
    "render!gdk4.Surface!1!(self: gdk4.Surface; region: cairo.Region): bool!(self: ptr gdk4.Surface00; region: ptr cairo.Region00): gboolean",
    "cancel!gdk4.Drag!1!(self: gdk4.Drag; reason: gdk4.DragCancelReason)!(self: ptr gdk4.Drag00; reason: gdk4.DragCancelReason)",
    "display_opened!gdk4.DisplayManager!1!(self: gdk4.DisplayManager; display: gdk4.Display)!(self: ptr gdk4.DisplayManager00; display: ptr gdk4.Display00)",
    "compute_size!gdk4.DragSurface!1!(self: gdk4.DragSurface; size: gdk4.DragSurfaceSize)!(self: ptr gdk4.DragSurface00; size: ptr ptr gdk4.DragSurfaceSize00)",
    "compute_size!gdk4.Toplevel!1!(self: gdk4.Toplevel; size: gdk4.ToplevelSize)!(self: ptr gdk4.Toplevel00; size: gdk4.ToplevelSize)",
    "xevent!gdkx114.X11Display!1!(self: gdkx114.X11Display; xevent: pointer): bool!(self: ptr gdkx114.X11Display00; xevent: pointer): gboolean",
    "bind!gobject.SignalGroup!1!(self: gobject.SignalGroup; instance: gobject.Object)!(self: ptr gobject.SignalGroup00; instance: ptr gobject.Object00)",
    "activate!gio.SimpleAction!1!(self: gio.SimpleAction; parameter: glib.Variant = nil)!(self: ptr gio.SimpleAction00; parameter: ptr glib.Variant00)",
    "change_state!gio.SimpleAction!1!(self: gio.SimpleAction; value: glib.Variant = nil)!(self: ptr gio.SimpleAction00; value: ptr glib.Variant00)",
    "command_line!gio.GApplication!1!(self: gio.GApplication; commandLine: gio.ApplicationCommandLine): int!(self: ptr gio.GApplication00; commandLine: ptr gio.ApplicationCommandLine00): int32",
    "handle_local_options!gio.GApplication!1!(self: gio.GApplication; options: glib.VariantDict): int!(self: ptr gio.GApplication00; options: ptr glib.VariantDict00): int32",
    "name_lost!gio.GApplication!0!(self: gio.GApplication): bool!(self: ptr gio.GApplication00): gboolean",
    "open!gio.GApplication!3!(self: gio.GApplication; files: GFile00Array; nFiles: int; hint: cstring)!(self: ptr gio.GApplication00; files: gio.GFile00Array; nFiles: int32; hint: cstring)",
    "action_added!gio.ActionGroup!1!(self: gio.ActionGroup; actionName: cstring)!(self: ptr gio.ActionGroup00; actionName: cstring)",
    "action_enabled_changed!gio.ActionGroup!2!(self: gio.ActionGroup; actionName: cstring; enabled: bool)!(self: ptr gio.ActionGroup00; actionName: cstring; enabled: gboolean)",
    "action_removed!gio.ActionGroup!1!(self: gio.ActionGroup; actionName: cstring)!(self: ptr gio.ActionGroup00; actionName: cstring)",
    "action_state_changed!gio.ActionGroup!2!(self: gio.ActionGroup; actionName: cstring; value: glib.Variant)!(self: ptr gio.ActionGroup00; actionName: cstring; value: ptr glib.Variant00)",
    "ask_password!gio.MountOperation!4!(self: gio.MountOperation; message: cstring; defaultUser: cstring; defaultDomain: cstring; flags: gio.AskPasswordFlags)!(self: ptr gio.MountOperation00; message: cstring; defaultUser: cstring; defaultDomain: cstring; flags: gio.AskPasswordFlags)",
    "ask_question!gio.MountOperation!2!(self: gio.MountOperation; message: cstring; choices: varargs[string, `$`])!(self: ptr gio.MountOperation00; message: cstring; choices: cstringArray)",
    "reply!gio.MountOperation!1!(self: gio.MountOperation; resu: gio.MountOperationResult)!(self: ptr gio.MountOperation00; resu: gio.MountOperationResult)",
    "show_processes!gio.MountOperation!3!(self: gio.MountOperation; message: cstring; processes: GArray00Array; choices: varargs[string, `$`])!(self: ptr gio.MountOperation00; message: cstring; processes: GArray00Array; choices: cstringArray)",
    "show_unmount_progress!gio.MountOperation!3!(self: gio.MountOperation; message: cstring; timeLeft: int64; bytesLeft: int64)!(self: ptr gio.MountOperation00; message: cstring; timeLeft: int64; bytesLeft: int64)",
    "launch_failed!gio.AppLaunchContext!1!(self: gio.AppLaunchContext; startupNotifyId: cstring)!(self: ptr gio.AppLaunchContext00; startupNotifyId: cstring)",
    "launch_started!gio.AppLaunchContext!2!(self: gio.AppLaunchContext; info: gio.AppInfo; platformData: glib.Variant = nil)!(self: ptr gio.AppLaunchContext00; info: ptr gio.AppInfo00; platformData: ptr glib.Variant00)",
    "launched!gio.AppLaunchContext!2!(self: gio.AppLaunchContext; info: gio.AppInfo; platformData: glib.Variant)!(self: ptr gio.AppLaunchContext00; info: ptr gio.AppInfo00; platformData: ptr glib.Variant00)",
    "changed!gio.FileMonitor!3!(self: gio.FileMonitor; file: gio.GFile; otherFile: gio.GFile = nil; eventType: gio.FileMonitorEvent)!(self: ptr gio.FileMonitor00; file: ptr gio.GFile00; otherFile: ptr gio.GFile00; eventType: gio.FileMonitorEvent)",
    "closed!gio.DBusConnection!2!(self: gio.DBusConnection; remotePeerVanished: bool; error: ptr glib.Error)!(self: ptr gio.DBusConnection00; remotePeerVanished: gboolean; error: ptr glib.Error)",
    "items_changed!gio.MenuModel!3!(self: gio.MenuModel; position: int; removed: int; added: int)!(self: ptr gio.MenuModel00; position: int32; removed: int32; added: int32)",
    "allow_mechanism!gio.DBusAuthObserver!1!(self: gio.DBusAuthObserver; mechanism: cstring): bool!(self: ptr gio.DBusAuthObserver00; mechanism: cstring): gboolean",
    "authorize_authenticated_peer!gio.DBusAuthObserver!2!(self: gio.DBusAuthObserver; stream: gio.IOStream; credentials: gio.Credentials = nil): bool!(self: ptr gio.DBusAuthObserver00; stream: ptr gio.IOStream00; credentials: ptr gio.Credentials00): gboolean",
    "g_properties_changed!gio.DBusProxy!2!(self: gio.DBusProxy; changedProperties: glib.Variant; invalidatedProperties: varargs[string, `$`])!(self: ptr gio.DBusProxy00; changedProperties: ptr glib.Variant00; invalidatedProperties: cstringArray)",
    "g_signal!gio.DBusProxy!3!(self: gio.DBusProxy; senderName: cstring = nil; signalName: cstring; parameters: glib.Variant)!(self: ptr gio.DBusProxy00; senderName: cstring; signalName: cstring; parameters: ptr glib.Variant00)",
    "interface_proxy_properties_changed!gio.DBusObjectManagerClient!4!(self: gio.DBusObjectManagerClient; objectProxy: gio.DBusObjectProxy; interfaceProxy: gio.DBusProxy; changedProperties: glib.Variant; invalidatedProperties: varargs[string, `$`])!(self: ptr gio.DBusObjectManagerClient00; objectProxy: ptr gio.DBusObjectProxy00; interfaceProxy: ptr gio.DBusProxy00; changedProperties: ptr glib.Variant00; invalidatedProperties: cstringArray)",
    "interface_proxy_signal!gio.DBusObjectManagerClient!5!(self: gio.DBusObjectManagerClient; objectProxy: gio.DBusObjectProxy; interfaceProxy: gio.DBusProxy; senderName: cstring; signalName: cstring; parameters: glib.Variant)!(self: ptr gio.DBusObjectManagerClient00; objectProxy: ptr gio.DBusObjectProxy00; interfaceProxy: ptr gio.DBusProxy00; senderName: cstring; signalName: cstring; parameters: ptr glib.Variant00)",
    "g_authorize_method!gio.DBusInterfaceSkeleton!1!(self: gio.DBusInterfaceSkeleton; invocation: gio.DBusMethodInvocation): bool!(self: ptr gio.DBusInterfaceSkeleton00; invocation: ptr gio.DBusMethodInvocation00): gboolean",
    "authorize_method!gio.DBusObjectSkeleton!2!(self: gio.DBusObjectSkeleton; `interface`: gio.DBusInterfaceSkeleton; invocation: gio.DBusMethodInvocation): bool!(self: ptr gio.DBusObjectSkeleton00; `interface`: ptr gio.DBusInterfaceSkeleton00; invocation: ptr gio.DBusMethodInvocation00): gboolean",
    "interface_added!gio.DBusObject!1!(self: gio.DBusObject; `interface`: gio.DBusInterface)!(self: ptr gio.DBusObject00; `interface`: ptr gio.DBusInterface00)",
    "interface_removed!gio.DBusObject!1!(self: gio.DBusObject; `interface`: gio.DBusInterface)!(self: ptr gio.DBusObject00; `interface`: ptr gio.DBusInterface00)",
    "interface_added!gio.DBusObjectManager!2!(self: gio.DBusObjectManager; obj: gio.DBusObject; `interface`: gio.DBusInterface)!(self: ptr gio.DBusObjectManager00; obj: ptr gio.DBusObject00; `interface`: ptr gio.DBusInterface00)",
    "interface_removed!gio.DBusObjectManager!2!(self: gio.DBusObjectManager; obj: gio.DBusObject; `interface`: gio.DBusInterface)!(self: ptr gio.DBusObjectManager00; obj: ptr gio.DBusObject00; `interface`: ptr gio.DBusInterface00)",
    "object_added!gio.DBusObjectManager!1!(self: gio.DBusObjectManager; obj: gio.DBusObject)!(self: ptr gio.DBusObjectManager00; obj: ptr gio.DBusObject00)",
    "object_removed!gio.DBusObjectManager!1!(self: gio.DBusObjectManager; obj: gio.DBusObject)!(self: ptr gio.DBusObjectManager00; obj: ptr gio.DBusObject00)",
    "new_connection!gio.DBusServer!1!(self: gio.DBusServer; connection: gio.DBusConnection): bool!(self: ptr gio.DBusServer00; connection: ptr gio.DBusConnection00): gboolean",
    "authorize!gio.DebugControllerDBus!1!(self: gio.DebugControllerDBus; invocation: gio.DBusMethodInvocation): bool!(self: ptr gio.DebugControllerDBus00; invocation: ptr gio.DBusMethodInvocation00): gboolean",
    "accept_certificate!gio.DtlsConnection!2!(self: gio.DtlsConnection; peerCert: gio.TlsCertificate; errors: gio.TlsCertificateFlags): bool!(self: ptr gio.DtlsConnection00; peerCert: ptr gio.TlsCertificate00; errors: gio.TlsCertificateFlags): gboolean",
    "accept_certificate!gio.TlsConnection!2!(self: gio.TlsConnection; peerCert: gio.TlsCertificate; errors: gio.TlsCertificateFlags): bool!(self: ptr gio.TlsConnection00; peerCert: ptr gio.TlsCertificate00; errors: gio.TlsCertificateFlags): gboolean",
    "items_changed!gio.ListModel!3!(self: gio.ListModel; position: int; removed: int; added: int)!(self: ptr gio.ListModel00; position: uint32; removed: uint32; added: uint32)",
    "low_memory_warning!gio.MemoryMonitor!1!(self: gio.MemoryMonitor; level: gio.MemoryMonitorWarningLevel)!(self: ptr gio.MemoryMonitor00; level: gio.MemoryMonitorWarningLevel)",
    "drive_changed!gio.VolumeMonitor!1!(self: gio.VolumeMonitor; drive: gio.Drive)!(self: ptr gio.VolumeMonitor00; drive: ptr gio.Drive00)",
    "drive_connected!gio.VolumeMonitor!1!(self: gio.VolumeMonitor; drive: gio.Drive)!(self: ptr gio.VolumeMonitor00; drive: ptr gio.Drive00)",
    "drive_disconnected!gio.VolumeMonitor!1!(self: gio.VolumeMonitor; drive: gio.Drive)!(self: ptr gio.VolumeMonitor00; drive: ptr gio.Drive00)",
    "drive_eject_button!gio.VolumeMonitor!1!(self: gio.VolumeMonitor; drive: gio.Drive)!(self: ptr gio.VolumeMonitor00; drive: ptr gio.Drive00)",
    "drive_stop_button!gio.VolumeMonitor!1!(self: gio.VolumeMonitor; drive: gio.Drive)!(self: ptr gio.VolumeMonitor00; drive: ptr gio.Drive00)",
    "mount_added!gio.VolumeMonitor!1!(self: gio.VolumeMonitor; mount: gio.Mount)!(self: ptr gio.VolumeMonitor00; mount: ptr gio.Mount00)",
    "mount_changed!gio.VolumeMonitor!1!(self: gio.VolumeMonitor; mount: gio.Mount)!(self: ptr gio.VolumeMonitor00; mount: ptr gio.Mount00)",
    "mount_pre_unmount!gio.VolumeMonitor!1!(self: gio.VolumeMonitor; mount: gio.Mount)!(self: ptr gio.VolumeMonitor00; mount: ptr gio.Mount00)",
    "mount_removed!gio.VolumeMonitor!1!(self: gio.VolumeMonitor; mount: gio.Mount)!(self: ptr gio.VolumeMonitor00; mount: ptr gio.Mount00)",
    "volume_added!gio.VolumeMonitor!1!(self: gio.VolumeMonitor; volume: gio.Volume)!(self: ptr gio.VolumeMonitor00; volume: ptr gio.Volume00)",
    "volume_changed!gio.VolumeMonitor!1!(self: gio.VolumeMonitor; volume: gio.Volume)!(self: ptr gio.VolumeMonitor00; volume: ptr gio.Volume00)",
    "volume_removed!gio.VolumeMonitor!1!(self: gio.VolumeMonitor; volume: gio.Volume)!(self: ptr gio.VolumeMonitor00; volume: ptr gio.Volume00)",
    "network_changed!gio.NetworkMonitor!1!(self: gio.NetworkMonitor; networkAvailable: bool)!(self: ptr gio.NetworkMonitor00; networkAvailable: gboolean)",
    "change_event!gio.Settings!2!(self: gio.Settings; keys: seq[uint32]): bool!(self: ptr gio.Settings00; keys: uint32Array; nKeys: int32): gboolean",
    "changed!gio.Settings!1!(self: gio.Settings; key: cstring)!(self: ptr gio.Settings00; key: cstring)",
    "writable_change_event!gio.Settings!1!(self: gio.Settings; key: int): bool!(self: ptr gio.Settings00; key: uint32): gboolean",
    "writable_changed!gio.Settings!1!(self: gio.Settings; key: cstring)!(self: ptr gio.Settings00; key: cstring)",
    "event!gio.SocketClient!3!(self: gio.SocketClient; event: gio.SocketClientEvent; connectable: gio.SocketConnectable; connection: gio.IOStream = nil)!(self: ptr gio.SocketClient00; event: gio.SocketClientEvent; connectable: ptr gio.SocketConnectable00; connection: ptr gio.IOStream00)",
    "event!gio.SocketListener!2!(self: gio.SocketListener; event: gio.SocketListenerEvent; socket: gio.Socket)!(self: ptr gio.SocketListener00; event: gio.SocketListenerEvent; socket: ptr gio.Socket00)",
    "incoming!gio.SocketService!2!(self: gio.SocketService; connection: gio.SocketConnection; sourceObject: gobject.Object = nil): bool!(self: ptr gio.SocketService00; connection: ptr gio.SocketConnection00; sourceObject: ptr gobject.Object00): gboolean",
    "run!gio.ThreadedSocketService!2!(self: gio.ThreadedSocketService; connection: gio.SocketConnection; sourceObject: gobject.Object = nil): bool!(self: ptr gio.ThreadedSocketService00; connection: ptr gio.SocketConnection00; sourceObject: ptr gobject.Object00): gboolean",
    "area_updated!gdkpixbuf.PixbufLoader!4!(self: gdkpixbuf.PixbufLoader; x: int; y: int; width: int; height: int)!(self: ptr gdkpixbuf.PixbufLoader00; x: int32; y: int32; width: int32; height: int32)",
    "size_prepared!gdkpixbuf.PixbufLoader!2!(self: gdkpixbuf.PixbufLoader; width: int; height: int)!(self: ptr gdkpixbuf.PixbufLoader00; width: int32; height: int32)",
    "active_descendant_changed!atk.Object!1!(self: atk.Object; arg1: atk.Object)!(self: ptr atk.Object00; arg1: ptr ptr atk.Object00)",
    "announcement!atk.Object!1!(self: atk.Object; arg1: cstring)!(self: ptr atk.Object00; arg1: cstring)",
    "attribute_changed!atk.Object!2!(self: atk.Object; arg1: cstring; arg2: cstring)!(self: ptr atk.Object00; arg1: cstring; arg2: cstring)",
    "children_changed!atk.Object!2!(self: atk.Object; arg1: int; arg2: atk.Object)!(self: ptr atk.Object00; arg1: uint32; arg2: ptr ptr atk.Object00)",
    "focus_event!atk.Object!1!(self: atk.Object; arg1: bool)!(self: ptr atk.Object00; arg1: gboolean)",
    "notification!atk.Object!2!(self: atk.Object; arg1: cstring; arg2: int)!(self: ptr atk.Object00; arg1: cstring; arg2: int32)",
    "property_change!atk.Object!1!(self: atk.Object; arg1: atk.PropertyValues)!(self: ptr atk.Object00; arg1: ptr ptr atk.PropertyValues00)",
    "state_change!atk.Object!2!(self: atk.Object; arg1: cstring; arg2: bool)!(self: ptr atk.Object00; arg1: cstring; arg2: gboolean)",
    "bounds_changed!atk.Component!1!(self: atk.Component; arg1: atk.Rectangle)!(self: ptr atk.Component00; arg1: atk.Rectangle)",
    "document_attribute_changed!atk.Document!2!(self: atk.Document; arg1: cstring; arg2: cstring)!(self: ptr atk.Document00; arg1: cstring; arg2: cstring)",
    "page_changed!atk.Document!1!(self: atk.Document; pageNumber: int)!(self: ptr atk.Document00; pageNumber: int32)",
    "link_selected!atk.Hypertext!1!(self: atk.Hypertext; arg1: int)!(self: ptr atk.Hypertext00; arg1: int32)",
    "column_deleted!atk.Table!2!(self: atk.Table; arg1: int; arg2: int)!(self: ptr atk.Table00; arg1: int32; arg2: int32)",
    "column_inserted!atk.Table!2!(self: atk.Table; arg1: int; arg2: int)!(self: ptr atk.Table00; arg1: int32; arg2: int32)",
    "row_deleted!atk.Table!2!(self: atk.Table; arg1: int; arg2: int)!(self: ptr atk.Table00; arg1: int32; arg2: int32)",
    "row_inserted!atk.Table!2!(self: atk.Table; arg1: int; arg2: int)!(self: ptr atk.Table00; arg1: int32; arg2: int32)",
    "text_caret_moved!atk.Text!1!(self: atk.Text; arg1: int)!(self: ptr atk.Text00; arg1: int32)",
    "text_changed!atk.Text!2!(self: atk.Text; arg1: int; arg2: int)!(self: ptr atk.Text00; arg1: int32; arg2: int32)",
    "text_insert!atk.Text!3!(self: atk.Text; arg1: int; arg2: int; arg3: cstring)!(self: ptr atk.Text00; arg1: int32; arg2: int32; arg3: cstring)",
    "text_remove!atk.Text!3!(self: atk.Text; arg1: int; arg2: int; arg3: cstring)!(self: ptr atk.Text00; arg1: int32; arg2: int32; arg3: cstring)",
    "value_changed!atk.Value!2!(self: atk.Value; value: cdouble; text: cstring)!(self: ptr atk.Value00; value: cdouble; text: cstring)",
    "activate_link!adw.AboutDialog!1!(self: adw.AboutDialog; uri: cstring): bool!(self: ptr adw.AboutDialog00; uri: cstring): gboolean",
    "activate_link!adw.AboutWindow!1!(self: adw.AboutWindow; uri: cstring): bool!(self: ptr adw.AboutWindow00; uri: cstring): gboolean",
    "response!adw.AlertDialog!1!(self: adw.AlertDialog; response: cstring)!(self: ptr adw.AlertDialog00; response: cstring)",
    "page_changed!adw.Carousel!1!(self: adw.Carousel; index: int)!(self: ptr adw.Carousel00; index: uint32)",
    "response!adw.MessageDialog!1!(self: adw.MessageDialog; response: cstring)!(self: ptr adw.MessageDialog00; response: cstring)",
    "get_next_page!adw.NavigationView!0!(self: adw.NavigationView): NavigationPage!(self: ptr adw.NavigationView00): ptr NavigationPage00",
    "popped!adw.NavigationView!1!(self: adw.NavigationView; page: adw.NavigationPage)!(self: ptr adw.NavigationView00; page: ptr adw.NavigationPage00)",
    "input!adw.SpinRow!1!(self: adw.SpinRow; newValue: var cdouble): int!(self: ptr adw.SpinRow00; newValue: var cdouble): int32",
    "output!adw.SpinRow!0!(self: adw.SpinRow): bool!(self: ptr adw.SpinRow00): gboolean",
    "end_swipe!adw.SwipeTracker!2!(self: adw.SwipeTracker; velocity: cdouble; to: cdouble)!(self: ptr adw.SwipeTracker00; velocity: cdouble; to: cdouble)",
    "prepare!adw.SwipeTracker!1!(self: adw.SwipeTracker; direction: adw.NavigationDirection)!(self: ptr adw.SwipeTracker00; direction: adw.NavigationDirection)",
    "update_swipe!adw.SwipeTracker!1!(self: adw.SwipeTracker; progress: cdouble)!(self: ptr adw.SwipeTracker00; progress: cdouble)",
    "extra_drag_drop!adw.TabBar!2!(self: adw.TabBar; page: adw.TabPage; value: gobject.Value): bool!(self: ptr adw.TabBar00; page: ptr adw.TabPage00; value: gobject.Value): gboolean",
    "extra_drag_value!adw.TabBar!2!(self: adw.TabBar; page: adw.TabPage; value: gobject.Value): gdk4.DragAction!(self: ptr adw.TabBar00; page: ptr adw.TabPage00; value: gobject.Value): gdk4.DragAction",
    "close_page!adw.TabView!1!(self: adw.TabView; page: adw.TabPage): bool!(self: ptr adw.TabView00; page: ptr adw.TabPage00): gboolean",
    "create_window!adw.TabView!0!(self: adw.TabView): TabView!(self: ptr adw.TabView00): ptr TabView00",
    "indicator_activated!adw.TabView!1!(self: adw.TabView; page: adw.TabPage)!(self: ptr adw.TabView00; page: ptr adw.TabPage00)",
    "page_attached!adw.TabView!2!(self: adw.TabView; page: adw.TabPage; position: int)!(self: ptr adw.TabView00; page: ptr adw.TabPage00; position: int32)",
    "page_detached!adw.TabView!2!(self: adw.TabView; page: adw.TabPage; position: int)!(self: ptr adw.TabView00; page: ptr adw.TabPage00; position: int32)",
    "page_reordered!adw.TabView!2!(self: adw.TabView; page: adw.TabPage; position: int)!(self: ptr adw.TabView00; page: ptr adw.TabPage00; position: int32)",
    "setup_menu!adw.TabView!1!(self: adw.TabView; page: adw.TabPage = nil)!(self: ptr adw.TabView00; page: ptr adw.TabPage00)",
    "create_tab!adw.TabOverview!0!(self: adw.TabOverview): TabPage!(self: ptr adw.TabOverview00): ptr TabPage00",
    "extra_drag_drop!adw.TabOverview!2!(self: adw.TabOverview; page: adw.TabPage; value: gobject.Value): bool!(self: ptr adw.TabOverview00; page: ptr adw.TabPage00; value: gobject.Value): gboolean",
    "extra_drag_value!adw.TabOverview!2!(self: adw.TabOverview; page: adw.TabPage; value: gobject.Value): gdk4.DragAction!(self: ptr adw.TabOverview00; page: ptr adw.TabPage00; value: gobject.Value): gdk4.DragAction",
    "accept_certificate!soup3.Message!2!(self: soup3.Message; tlsPeerCertificate: gio.TlsCertificate; tlsPeerErrors: gio.TlsCertificateFlags): bool!(self: ptr soup3.Message00; tlsPeerCertificate: ptr gio.TlsCertificate00; tlsPeerErrors: gio.TlsCertificateFlags): gboolean",
    "authenticate!soup3.Message!2!(self: soup3.Message; auth: soup3.Auth; retrying: bool): bool!(self: ptr soup3.Message00; auth: ptr soup3.Auth00; retrying: gboolean): gboolean",
    "content_sniffed!soup3.Message!2!(self: soup3.Message; `type`: cstring; params: ptr HashTable00)!(self: ptr soup3.Message00; `type`: cstring; params: ptr HashTable00)",
    "got_body_data!soup3.Message!1!(self: soup3.Message; chunkSize: int)!(self: ptr soup3.Message00; chunkSize: uint32)",
    "network_event!soup3.Message!2!(self: soup3.Message; event: gio.SocketClientEvent; connection: gio.IOStream)!(self: ptr soup3.Message00; event: gio.SocketClientEvent; connection: ptr gio.IOStream00)",
    "request_certificate!soup3.Message!1!(self: soup3.Message; tlsConnection: gio.TlsClientConnection): bool!(self: ptr soup3.Message00; tlsConnection: ptr gio.TlsClientConnection00): gboolean",
    "request_certificate_password!soup3.Message!1!(self: soup3.Message; tlsPassword: gio.TlsPassword): bool!(self: ptr soup3.Message00; tlsPassword: ptr gio.TlsPassword00): gboolean",
    "wrote_body_data!soup3.Message!1!(self: soup3.Message; chunkSize: int)!(self: ptr soup3.Message00; chunkSize: uint32)",
    "accept_certificate!soup3.ServerMessage!2!(self: soup3.ServerMessage; tlsPeerCertificate: gio.TlsCertificate; tlsPeerErrors: gio.TlsCertificateFlags): bool!(self: ptr soup3.ServerMessage00; tlsPeerCertificate: ptr gio.TlsCertificate00; tlsPeerErrors: gio.TlsCertificateFlags): gboolean",
    "got_chunk!soup3.ServerMessage!1!(self: soup3.ServerMessage; chunk: glib.Bytes)!(self: ptr soup3.ServerMessage00; chunk: ptr glib.Bytes00)",
    "wrote_body_data!soup3.ServerMessage!1!(self: soup3.ServerMessage; chunkSize: int)!(self: ptr soup3.ServerMessage00; chunkSize: uint32)",
    "changed!soup3.CookieJar!2!(self: soup3.CookieJar; oldCookie: soup3.Cookie; newCookie: soup3.Cookie)!(self: ptr soup3.CookieJar00; oldCookie: ptr soup3.Cookie00; newCookie: ptr soup3.Cookie00)",
    "changed!soup3.HSTSEnforcer!2!(self: soup3.HSTSEnforcer; oldPolicy: soup3.HSTSPolicy; newPolicy: soup3.HSTSPolicy)!(self: ptr soup3.HSTSEnforcer00; oldPolicy: ptr soup3.HSTSPolicy00; newPolicy: ptr soup3.HSTSPolicy00)",
    "request_aborted!soup3.Server!1!(self: soup3.Server; message: soup3.ServerMessage)!(self: ptr soup3.Server00; message: ptr soup3.ServerMessage00)",
    "request_finished!soup3.Server!1!(self: soup3.Server; message: soup3.ServerMessage)!(self: ptr soup3.Server00; message: ptr soup3.ServerMessage00)",
    "request_read!soup3.Server!1!(self: soup3.Server; message: soup3.ServerMessage)!(self: ptr soup3.Server00; message: ptr soup3.ServerMessage00)",
    "request_started!soup3.Server!1!(self: soup3.Server; message: soup3.ServerMessage)!(self: ptr soup3.Server00; message: ptr soup3.ServerMessage00)",
    "error!soup3.WebsocketConnection!1!(self: soup3.WebsocketConnection; error: ptr glib.Error)!(self: ptr soup3.WebsocketConnection00; error: ptr glib.Error)",
    "message!soup3.WebsocketConnection!2!(self: soup3.WebsocketConnection; `type`: int; message: glib.Bytes)!(self: ptr soup3.WebsocketConnection00; `type`: int32; message: ptr glib.Bytes00)",
    "pong!soup3.WebsocketConnection!1!(self: soup3.WebsocketConnection; message: glib.Bytes)!(self: ptr soup3.WebsocketConnection00; message: ptr glib.Bytes00)",
    "request_queued!soup3.Session!1!(self: soup3.Session; msg: soup3.Message)!(self: ptr soup3.Session00; msg: ptr soup3.Message00)",
    "request_unqueued!soup3.Session!1!(self: soup3.Session; msg: soup3.Message)!(self: ptr soup3.Session00; msg: ptr soup3.Message00)",
  ]
